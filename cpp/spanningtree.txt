그래프 알고리즘 중 하나.
서로소 집합, 크루스칼 알고리즘을 공부하며 구해야 하는 것 중 하나인데 최소 신장트리를 구할 때
간선 데이터를 비용에 따라 오름차순으로 정렬하고, 간선을 하나씩 확인하며 현재의 간선이 사이클을 발생시키는지 확인


크루스칼은 거의 그리디알고리즘이랑 비슷해. 신장 트리의 특징은 신장 트리에 최종으로 포함되는 간선의 개수가
'노드의 개수 - 1' 개와 같다는 특징이 있다.

핵심 원리는 가장 거리가 짧은 간선부터 차례대로 집합 추가.
-> 사이클을 발생 시키면 제외. 항상 최적의 해를 보장할 수 있다.

단계 별로 진행해보기
-> 간선 (1,2)(1,5)(2,3)(2,6)(3,4)(4,6)(4,7)(5,6)(6,7)
        29   75   35    34   7    23   13   53   25

        7   13  23  25  29  34  35  53  75 로 정렬해서 집합에 포함시켜야지.
        7을 연결한 놈이 3,4 였으므로 노드 3과 4를 동일한 집합에 속하도록 만듦.
        -> 비 방향에서 사이클을 확인하던 서로소집합 알고리즘인 union함수 사용

        그다음으로 가장 작은 비용인 (4,7)사용하여 4,7도 집합 만들고
        (4,6)사용하여 (4,6)도 집합 만들고
        (6,7)을 사용하려했지만 6,7이 이미 동일한 집합에 포함되어 있으므로
        신장트리에 포함하지 않아야 함. 따라서 union함수 호출 x

        1,2 2,6 2,3(x) 5,6 1,5(x)하면 최소 신장트리가 진행이 됨.
        총 비용 : 159.

    
